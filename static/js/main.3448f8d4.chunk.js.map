{"version":3,"sources":["App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","TAGS","name","tags","sort","starsToColor","stars","App","props","context","onTagClick","clickedTag","selectedTags","state","includes","filter","tag","length","push","setState","calculateOperators","onClear","operators","tagCombinations","array","permutations","i","Math","pow","binary","toString","diff","Array","join","permutation","y","a","b","results","forEach","combination","qualificationFilter","op","combinationOperators","maxStars","minStars","combinationResults","start","singleOpA","singleOpB","console","log","JSON","stringify","fetch","then","response","ok","Error","json","result","catch","err","alert","ThemeProvider","className","TableContainer","Table","TableBody","map","tagCategory","TableRow","key","TableCell","Button","variant","color","onClick","this","gamepressUrl","toLowerCase","style","backgroundColor","href","target","Link","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3448f8d4.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { \n  ThemeProvider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableContainer,\n  Button,\n  Link\n} from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#eaeaea'\n    },\n    secondary: {\n      main: '#1a1a1a'\n    }\n  },\n});\n\nconst TAGS = [\n  {\n    name: 'Qualification',\n    tags: ['Starter', 'Senior Operator', 'Top Operator']\n  },\n  {\n    name: 'Position',\n    tags: ['Melee', 'Ranged']\n  },\n  {\n    name: 'Class',\n    tags: ['Guard', 'Medic', 'Vanguard', 'Caster', 'Sniper', 'Defender', 'Supporter', 'Specialist'].sort()\n  },\n  {\n    name: 'Affix',\n    tags: [\n      'Healing', 'Support', 'DPS', 'AoE', 'Slow', 'Survival', 'Defense', 'Debuff', 'Shift', \n      'Crowdcontrol', 'Nuker', 'Summon', 'Fast-Redeploy', 'DP-Recovery', 'Robot'\n    ].sort()\n  }\n];\n\nconst MAX_TAGS = 7;\n\nclass App extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      operators: [],\n\n      selectedTags: [],\n      calculateOperators: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('./data/operators-min.json')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error();\n        }\n\n        return response.json();\n      })\n      .then(result => {\n        this.setState({ operators: result });\n      })\n      .catch(err => {\n        alert('Error when fetching operators data.');\n      })\n  }\n\n  onTagClick = (clickedTag) => {\n    let selectedTags = [...this.state.selectedTags];\n\n    if (selectedTags.includes(clickedTag)) {\n      selectedTags = selectedTags.filter(tag => tag !== clickedTag);\n    }\n    else if (selectedTags.length < MAX_TAGS) {\n      selectedTags.push(clickedTag);\n    }\n\n    this.setState({ selectedTags: selectedTags }, this.calculateOperators);\n  }\n\n  onClear = () => {\n    this.setState({ selectedTags: [], calculateOperators: [] });\n  }\n\n  calculateOperators = () => {\n    let operators = this.state.operators;\n    let selectedTags = this.state.selectedTags;\n\n    let tagCombinations = permutations(selectedTags);\n    \n    let results = [];\n    tagCombinations.forEach(combination => {\n      let qualificationFilter = (op) => { return op.stars !== 1 && op.stars !== 6};\n      if (combination.includes('Robot')) {\n        qualificationFilter = (op) => { return op.stars === 1};\n      }\n      else if (combination.includes('Starter')) {\n        qualificationFilter = (op) => { return op.stars === 2};\n      }\n      else if (combination.includes('Senior Operator')) {\n        qualificationFilter = (op) => { return op.stars === 5};\n      }\n      else if (combination.includes('Top Operator')) {\n        qualificationFilter = (op) => { return op.stars === 6};\n      }\n\n      let combinationOperators = operators.filter(op => {\n        for (let i = 0; i < combination.length; i++) {\n          if (!qualificationFilter(op) || !op.tags.includes(combination[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n\n      let maxStars = 1;\n      let minStars = 6;\n\n      combinationOperators.forEach(op => {\n        if (op.stars > maxStars) {\n          maxStars = op.stars;\n        }\n        \n        if (op.stars < minStars) {\n          minStars = op.stars;\n        }\n      });\n\n      let combinationResults = {\n        name: combination.join(' + '),\n        operators: combinationOperators.sort((a, b) => {\n          if (a.stars > b.stars) {\n            return -1;\n          }\n          else if (a.stars < b.start) {\n            return 1;\n          }\n          else {\n            if (a.name > b.name) {\n              return 1;\n            }\n            else if (a.name < b.name) {\n              return -1;\n            }\n            else {\n              return 0;\n            }\n          }\n        }),\n        maxStars: maxStars,\n        minStars: minStars\n      };\n\n      results.push(combinationResults);\n    });\n\n    results = results.sort((a, b) => {\n      let singleOpA = a.operators.length === 1;\n      let singleOpB = b.operators.length === 1\n      \n      if (singleOpA && !singleOpB) {\n        return -1\n      }\n      else if (!singleOpA && singleOpB) {\n        return 1;\n      }\n      else {\n        if (a.maxStars > b.maxStars) {\n          return -1;\n        }\n        else if (a.maxStars < b.maxStars) {\n          return 1;\n        }\n        else {\n          if (a.minStars > b.minStars) {\n            return -1;\n          }\n          else if (a.minStars > b.minStars) {\n            return 1;\n          }\n          else {\n            if (a.operators.length > b.operators.length) {\n              return 1;\n            }\n            else if (a.operators.length < b.operators.length) {\n              return -1;\n            }\n            else {\n              return 0;\n            }\n          }\n        }  \n      }\n    })\n\n    this.setState({ calculateOperators: results });\n\n    console.log(JSON.stringify(results));\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <div className='app'>\n          <div className='content'>\n            <h1>Arknights Recruitment Calculator</h1>\n\n            <div className='tags-area'>\n              <TableContainer>\n                <Table className='tags-table'>\n                  <TableBody>\n                  {\n                    TAGS.map(tagCategory => {\n                      return (\n                        <TableRow key={tagCategory.name}>\n                          <TableCell className='tags-table-cell tags-table-category'>\n                            {tagCategory.name}\n                          </TableCell>\n                          <TableCell className='tags-table-cell'>\n                            {\n                              tagCategory.tags.map(tag => {\n                                return (\n                                  <Button \n                                    key={tag}\n                                    className='tag-button' \n                                    variant={this.state.selectedTags.includes(tag) ? 'contained' : 'outlined'} \n                                    color='primary' \n                                    onClick={() => this.onTagClick(tag)}\n                                  >\n                                    {tag}\n                                  </Button>\n                                )\n                              })\n                            }\n                          </TableCell>                          \n                        </TableRow>\n                      );\n                    })\n                  }    \n                  </TableBody>\n                </Table>\n              </TableContainer>              \n            </div>\n            \n            <div className='clear-button-container'>\n              <Button color='primary' variant='outlined' onClick={this.onClear}>\n                Clear tags\n              </Button>\n            </div>\n\n            <h1>Operators</h1>\n\n            <h3>\n              {\n                this.state.selectedTags.length > 0 ? null : 'Select at least one tag'\n              }\n            </h3>\n            \n            <div className='tags-area'>\n              <TableContainer>\n                <Table className='tags-table'>\n                  <TableBody>\n                  {\n                    this.state.calculateOperators.map(combination => {\n                      if (combination.operators.length === 0) {\n                        return null;\n                      }\n\n\n                      return (\n                        <TableRow key={combination.name}>\n                          <TableCell className='tags-table-cell tags-table-category'>\n                            {combination.name}\n                          </TableCell>\n                          <TableCell className='tags-table-cell'>\n                            {\n                              combination.operators.map(op => {\n                                let gamepressUrl = `https://gamepress.gg/arknights/operator/${op.name.toLowerCase()}`\n\n                                return (\n                                  <Button \n                                    key={op.name}\n                                    className='tag-button' \n                                    variant={'contained'} \n                                    style={{ backgroundColor: starsToColor(op.stars) }}\n                                    href={gamepressUrl}\n                                    target='_blank'\n                                  >\n                                    {op.name}                                      \n                                  </Button>\n                                )\n                              })\n                            }\n                          </TableCell>                          \n                        </TableRow>\n                      );\n                    })\n                  }    \n                  </TableBody>\n                </Table>\n              </TableContainer>              \n            </div>\n          </div>\n\n          <div className='footer'>\n            <div>\n              <Link className='arknights-link' href='https://www.arknights.global/' target='_blank'>\n                Arknights\n              </Link>\n              <span> by </span>\n              <Link className='arknights-link' href='https://www.hypergryph.com/' target='_blank'>\n                HyperGryph\n              </Link>\n              <span> and </span> \n              <Link className='arknights-link' href='https://www.yo-star.com/' target='_blank'>\n                Yostar\n              </Link>\n            </div>\n            <div>\n              <span>Operators data from  </span>\n              <Link className='arknights-link' href='https://github.com/Aceship/AN-EN-Tags' target='_blank'>\n                Aceship@GitHub\n              </Link>\n            </div>\n            <div>\n              <span>Source and contact at </span>\n              <Link className='arknights-link' href='https://github.com/lloyd-san/arknights' target='_blank'>\n                Lloyd-san@Github/Arknights\n              </Link>\n            </div>\n          </div>\n\n        </div>\n      </ThemeProvider>     \n    );\n  }\n}\n\nfunction permutations(array) {\n  let permutations = [];\n\n  for (let i = 0; i < Math.pow(2, array.length); i++) {\n    let binary = (i >>> 0).toString(2);\n\n    let diff = array.length - binary.length;\n\n    binary = new Array(diff + 1).join('0') + binary;\n\n    let permutation = [];\n\n    for (let y = array.length - 1; y >= 0; y--) {\n      let b = binary[y];\n\n      if (b === '1') {\n        permutation.push(array[y]);\n      }\n    }\n\n    if (permutation.length > 0) {\n      permutations.push(permutation);\n    }\n  }\n\n  return permutations.sort((a, b) => {\n    if (a.length > b.length) {\n      return -1;\n    }\n    else if (a.length < b.length) {\n      return 1;\n    }\n    else {\n      return 0;\n    }\n  });\n}\n\nfunction starsToColor(stars) {\n  switch (stars) {\n    case 1:\n      return '#eaeaea';\n    case 2:\n      return '#dae336';\n    case 3: \n      return '#00b7ff';\n    case 4:\n      return '#cabccd';\n    case 5:\n      return '#e0cd8d';\n    case 6:\n      return '#d48e26';\n    default: \n      return '#eaeaea';\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}